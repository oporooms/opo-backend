# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality checks (Node ${{ matrix.node }})
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        node: [22.x]
    env:
      NODE_ENV: test
      CI: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: |
          if [ -f node_modules/.bin/eslint ]; then
            npm run lint
          else
            echo "Skipping lint: eslint not installed."
          fi
      - name: Compile TypeScript
        run: npm run build
      - name: Run tests
        run: npm test
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: ignore

  deploy:
    name: Deploy with PM2
    runs-on: self-hosted
    needs: quality
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Install PM2 globally (if missing)
        run: |
          if command -v pm2 >/dev/null 2>&1; then
            echo "pm2 already installed: $(pm2 -v)"
          else
            sudo npm install -g pm2@5
          fi
      - name: Copy PM2 ecosystem if present
        run: |
          if [ -f ecosystem.config.js ]; then
            echo "ecosystem.config.js present"
          else
            echo "No ecosystem.config.js found; using default start command"
          fi
      - name: Deploy with PM2 (start or reload)
        run: |
          # Use pm2 startOrReload to replace existing process gracefully
          if [ -f ecosystem.config.js ]; then
            sudo pm2 startOrReload ecosystem.config.js --env production
          else
            sudo pm2 start npm --name opo-backend -- start --silent --env production || true
          fi
      - name: Save PM2 process list and setup startup
        run: |
          sudo pm2 save || true
          # Generate and display startup command (manual execution may be required with --hp)
          sudo pm2 startup || true
      - name: Show PM2 status
        run: sudo pm2 status || true
